各类框架技术文档功能
0. 项目启动时加载所有框架按钮信息

1. 前端展示功能按钮
    前端页面导航栏添加下拉按钮
    - 展示所有符合规则的框架按钮
        - 点击时传入对应的ID值 然后根据ID值找到对应的树形菜单
        - 需要建立框架类别表 用来存放各类框架的类别信息
        - 表名： t_framework_type
2. 打开框架页面
    - 定义模板页面
        - 该页面可以展示所有框架的信息 例如点击mybatis则显示mubatis相关的信息 点击spring则显示spring相关信息
        - 模板设计
            - 左侧为树形菜单
            - 右侧为tab
                - 当点击某个具体菜单时 打开对应的文章信息
    - 创建树形菜单表
        - 该表需要根据layui展示树形菜单结构进行设计
        - layui展示树形菜单结构
            [{
                "title":"root",// 根节点
                "id":1,
                "alias":"菜单别名",
                "spread": true,// 是否展开 默认false 不展开
                "href":"#",// 请求地址 根节点可以忽略 不需要请求数据
                "children" :[{ // 子节点1
                    "title":"",
                    "id":2,
                    "alias":"",
                    "spread":false, // 是否展开 如果是子节点则可省略 如果是父节点 可以根据实际需求设置是否展开
                    "href":"" // 如果是子节点 则必须添加href 否则数据无法获取
                    "children":[{},{}] // 可以继续包含其他子节点
                },{ // 子节点2
                    ....
                }]
            }]
        - 表名称：t_framework_tree_menu
            - 字段：
                -   id       主键
                -   title    节点名称
                -   alias    菜单名称
                -   spread   是否展开 默认0 不展开 程序中使用false表示
                -   href     数据的请求地址 如果是根节点可以不填写地址 根节点无需获取数据
                -   pId      父节点ID 折叠存放树形菜单
                -   tId      类别ID  需要知道是哪个框架的菜单
            - 数据：
                每个框架菜单的顶级根级(祖级)节点id=-1
                查询时配合类别ID可以定位到某个框架的所有菜单项
                    如： where id=-1 and tId=1
3. 框架文档数据表设计
    - 该表是用来存放所有框架文档具体数据
    - 表名： t_framework
    - 字段设计：
        - id
        - treeId    菜单ID 当点击某个子菜单时需要获取的数据
        - content   文档内容 该数据为html格式
        - tId       菜单类别ID 后台管理使用
        - createTime 文档内容的编辑日期
        ## - views     阅读次数 后台用于统计 # 统计功能后期在设计

4. 功能开发
    3.1 前端首页面添加下拉按钮
    3.2 点击某个按钮时打开页面并加载对应的菜单项
    3.3 点击某个子菜单项时加载对应的文档数据